<Page x:Class="VeterinaryManagementSystem.Views.Proveedores.SupplierView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="clr-namespace:VeterinaryManagementSystem.Converters"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      Title="Gestión de Proveedores"
      Background="#F5F7FA">

    <Page.Resources>
        <local:StatusBackgroundConverter x:Key="StatusBackgroundConverter"/>
        <local:StatusTextConverter x:Key="StatusTextConverter"/>
        <local:StatusForegroundConverter x:Key="StatusForegroundConverter"/>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:FocusEffectConverter x:Key="FocusEffectConverter"/>

        <Storyboard x:Key="FadeIn">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0" To="1" Duration="0:0:0.3"/>
        </Storyboard>

        <Storyboard x:Key="ToolbarButtonsAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Duration="0:0:0.6">
                <LinearDoubleKeyFrame Value="0" KeyTime="0:0:0"/>
                <LinearDoubleKeyFrame Value="1" KeyTime="0:0:0.6"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" Duration="0:0:0.6">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="20"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="DataGridFadeIn">
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0" To="1" Duration="0:0:0.5"
                             BeginTime="0:0:0.3"/>
        </Storyboard>

        <Storyboard x:Key="ConfirmationDialogAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.3">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.3">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0.8"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <BackEase EasingMode="EaseOut" Amplitude="0.5"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                             From="0" To="1" Duration="0:0:0.3"/>
        </Storyboard>

        <!-- Notification Popup Style -->
        <Style x:Key="NotificationPopup" TargetType="Border">
            <Setter Property="Background" Value="#333333"/>
            <Setter Property="CornerRadius" Value="4"/>
            <Setter Property="Padding" Value="16,12"/>
            <Setter Property="MaxWidth" Value="300"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect BlurRadius="10" ShadowDepth="1" Opacity="0.3"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Success Notification Style -->
        <Style x:Key="SuccessNotification" TargetType="Border" BasedOn="{StaticResource NotificationPopup}">
            <Setter Property="Background" Value="#4CAF50"/>
        </Style>

        <!-- Error Notification Style -->
        <Style x:Key="ErrorNotification" TargetType="Border" BasedOn="{StaticResource NotificationPopup}">
            <Setter Property="Background" Value="#F44336"/>
        </Style>

        <!-- Warning Notification Style -->
        <Style x:Key="WarningNotification" TargetType="Border" BasedOn="{StaticResource NotificationPopup}">
            <Setter Property="Background" Value="#FF9800"/>
        </Style>

        <!-- Dialog Shadow Effect -->
        <DropShadowEffect x:Key="DialogShadow"
                         BlurRadius="20"
                         ShadowDepth="1"
                         Opacity="0.3"/>

        <!-- Circular Progress Bar Style -->
        <Style x:Key="CircularProgressBar" TargetType="ProgressBar">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ProgressBar">
                        <Grid>
                            <Ellipse Stroke="#E0E0E0" 
                                    StrokeThickness="4"/>
                            <Ellipse Stroke="#2196F3" 
                                    StrokeThickness="4">
                                <Ellipse.RenderTransform>
                                    <RotateTransform x:Name="RotateTransform" 
                                                   Angle="0"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsIndeterminate" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation 
                                                Storyboard.TargetName="RotateTransform"
                                                Storyboard.TargetProperty="Angle"
                                                From="0" To="360" Duration="0:0:1"
                                                RepeatBehavior="Forever"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Button Styles -->
        <Style x:Key="TransparentButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1A000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Grid Margin="24">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Header with animation -->
        <StackPanel Grid.Row="0" Opacity="0">
            <StackPanel.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                           From="0" To="1" Duration="0:0:0.5"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </StackPanel.Triggers>

            <TextBlock Text="Gestión de Proveedores"
                      FontSize="28"
                      FontWeight="Bold"
                      Margin="0,0,0,8"
                      Foreground="#1a1a1a"/>
            <TextBlock Text="Administra tu lista de proveedores de manera eficiente"
                      FontSize="14"
                      Foreground="#666666"
                      Margin="0,0,0,20"/>
        </StackPanel>

        <!-- Toolbar with enhanced styling -->
        <Grid Grid.Row="1" Margin="0,0,0,20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Enhanced Search Box -->
            <Border Background="White"
                    BorderBrush="#E0E0E0"
                    BorderThickness="1"
                    CornerRadius="8"
                    Width="350"
                    Height="45"
                    HorizontalAlignment="Left"
                    Effect="{Binding ElementName=SearchBox, Path=IsFocused, Converter={StaticResource FocusEffectConverter}}">
                <Grid>
                    <TextBox x:Name="SearchBox"
                            Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                            BorderThickness="0"
                            Padding="16,8"
                            VerticalContentAlignment="Center"
                            FontSize="14">
                        <TextBox.Style>
                            <Style TargetType="TextBox">
                                <Style.Triggers>
                                    <Trigger Property="Text" Value="">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="TextBox">
                                                    <Border Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding BorderBrush}"
                                                            BorderThickness="{TemplateBinding BorderThickness}">
                                                        <Grid>
                                                            <ScrollViewer x:Name="PART_ContentHost"/>
                                                            <TextBlock Text="Buscar por nombre, contacto o email..."
                                                                     Foreground="#BDBDBD"
                                                                     Margin="16,0,0,0"
                                                                     VerticalAlignment="Center"
                                                                     IsHitTestVisible="False"/>
                                                        </Grid>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <Button Command="{Binding SearchCommand}"
                            HorizontalAlignment="Right"
                            Width="45"
                            Height="45"
                            Style="{StaticResource TransparentButton}">
                        <Path Data="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                              Fill="#666666"
                              Stretch="Uniform"
                              Width="20"
                              Height="20"/>
                    </Button>
                </Grid>
            </Border>

            <!-- Enhanced CRUD Buttons -->
            <StackPanel Grid.Column="1" 
                        Orientation="Horizontal" 
                        HorizontalAlignment="Right">
                <StackPanel.RenderTransform>
                    <TranslateTransform/>
                </StackPanel.RenderTransform>
                <StackPanel.Triggers>
                    <EventTrigger RoutedEvent="Loaded">
                        <BeginStoryboard Storyboard="{StaticResource ToolbarButtonsAnimation}"/>
                    </EventTrigger>
                </StackPanel.Triggers>
                <Button Command="{Binding AddSupplierCommand}"
                        Style="{StaticResource PrimaryButton}"
                        Height="45"
                        Margin="0,0,12,0">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Path Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z"
                                  Fill="White"
                                  Width="16"
                                  Height="16"
                                  Margin="0,0,8,0"/>
                            <TextBlock Text="Agregar Proveedor"/>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button Command="{Binding UpdateSupplierCommand}"
                        Style="{StaticResource SecondaryButton}"
                        Height="45"
                        Margin="0,0,12,0"
                        IsEnabled="{Binding CanEditOrDelete, Mode=OneWay}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Path Data="M3 17.25V21h3.75L17.81 9.94l-3.75-3.75L3 17.25zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34c-.39-.39-1.02-.39-1.41 0l-1.83 1.83 3.75 3.75 1.83-1.83z"
                                  Fill="#2196F3"
                                  Width="16"
                                  Height="16"
                                  Margin="0,0,8,0"/>
                            <TextBlock Text="Editar"/>
                        </StackPanel>
                    </Button.Content>
                </Button>

                <Button Command="{Binding DeleteSupplierCommand}"
                        Style="{StaticResource DangerButton}"
                        Height="45"
                        IsEnabled="{Binding CanEditOrDelete, Mode=OneWay}">
                    <Button.Content>
                        <StackPanel Orientation="Horizontal">
                            <Path Data="M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z"
                                  Fill="White"
                                  Width="16"
                                  Height="16"
                                  Margin="0,0,8,0"/>
                            <TextBlock Text="Eliminar"/>
                        </StackPanel>
                    </Button.Content>
                </Button>
            </StackPanel>
        </Grid>

        <!-- Enhanced DataGrid -->
        <DataGrid Grid.Row="2"
             ItemsSource="{Binding Suppliers}"
         SelectedItem="{Binding SelectedSupplier, Mode=TwoWay}"
                  AutoGenerateColumns="False"
                  IsReadOnly="True"
                  BorderThickness="1"
                  BorderBrush="#E0E0E0"
                  RowHeight="50"
                  HeadersVisibility="Column"
                  GridLinesVisibility="None"
                  Background="White"
                  RowBackground="White"
                  AlternatingRowBackground="#F8F9FA"
                  CanUserResizeRows="False"
                  SelectionMode="Single"
                  SelectionUnit="FullRow">
            <DataGrid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard Storyboard="{StaticResource DataGridFadeIn}"/>
                </EventTrigger>
            </DataGrid.Triggers>
            <DataGrid.Resources>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="Background" Value="White"/>
                    <Setter Property="Padding" Value="16,12"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                    <Setter Property="BorderBrush" Value="#E0E0E0"/>
                    <Setter Property="BorderThickness" Value="0,0,0,1"/>
                </Style>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F1F3F5"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#E3F2FD"/>
                            <Setter Property="Foreground" Value="#1976D2"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Resources>

            <DataGrid.Columns>
                <DataGridTextColumn Header="ID" 
                                    Binding="{Binding Id}" 
                                    Width="Auto">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="16,0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Empresa" 
                                    Binding="{Binding CompanyName}" 
                                    Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="16,0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Contacto" 
                                    Binding="{Binding ContactName}" 
                                    Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="16,0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Teléfono" 
                                    Binding="{Binding Phone}" 
                                    Width="Auto">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="16,0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="Email" 
                                    Binding="{Binding Email}" 
                                    Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="Padding" Value="16,0"/>
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>

                <DataGridTemplateColumn Header="Estado" Width="Auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <Border CornerRadius="4" 
                                    Padding="8,4" 
                                    Margin="16,0"
                                    Background="{Binding IsActive, Converter={StaticResource StatusBackgroundConverter}}">
                                <TextBlock Text="{Binding IsActive, Converter={StaticResource StatusTextConverter}}" 
                                           FontWeight="Medium"
                                           Foreground="{Binding IsActive, Converter={StaticResource StatusForegroundConverter}}"/>
                            </Border>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
        </DataGrid>

        <!-- Status Bar -->
        <Border Grid.Row="3" 
                Background="White"
                BorderBrush="#E0E0E0"
                BorderThickness="1"
                CornerRadius="4"
                Margin="0,16,0,0"
                Padding="16,12">
            <Grid>
                <TextBlock Text="{Binding StatusMessage}"
                           Foreground="#666666"/>
                <TextBlock Text="{Binding Suppliers.Count, StringFormat='Total: {0} proveedores'}"
                           HorizontalAlignment="Right"
                           Foreground="#666666"/>
            </Grid>
        </Border>
    </Grid>
</Page>

